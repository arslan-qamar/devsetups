---
- name: Update apt package index
  apt:
    update_cache: yes
  when: state == "present"
  become: yes
  
- name: "Install packages"
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common    
  when: state == "present"
  become: yes

- name: "Add Docker's official GPG key"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
  when: state == "present"
  become: yes

- name: "{{ 'Remove' if state == 'absent' else 'Setup' }} up the Docker repository"
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: "{{ state }}"
  become: yes

- name: Update apt package index after adding Docker repo
  apt:
    update_cache: yes
  when: state == "present"  
  become: yes
    
- name: "{{ 'Remove' if state == 'absent' else 'Install' }} Docker components"
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: "{{ state }}"
    purge: "{{ 'yes' if state == 'absent' else 'no' }}"
  become: yes

- name: Gather service facts
  service_facts:

- name: Ensuring Docker service is running
  assert:
    that:
      - "'docker.service' in ansible_facts.services"
      - "ansible_facts.services['docker.service'].state == ('running' if state == 'present')"  
  when: state == "present"  

- name: Ensuring Docker service is uninstalled
  assert:
    that:
      - "'docker.service' not in ansible_facts.services"      
  when: state == "absent"  